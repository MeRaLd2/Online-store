version: '1.0'
services:
  postgresql:
    image: postgis/postgis:latest
    container_name: postgis
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1023
    ports:
      - 5432:5432  
    volumes:
      - /path/to/local/data:/var/lib/postgresql/data 

  mongo:
    image: mongo:7.0
    volumes:
      - mongo-data:/data/db
      - ./mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: mongo
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}

  favorite-service:
    build:
      context: ../services/favorite-service
      dockerfile: ./Dockerfile
    ports:
      - "5005:5005"
    depends_on:
      - postgresql
    environment:
      POSTGRES_DSN: ${POSTGRES_DSN}

  feedback-service:
    build:
      context: ../services/feedback-service
      dockerfile: ./Dockerfile
    ports:
      - "5004:5004"
    depends_on:
      - mongo
    environment:
      MONGO_DSN: ${MONGO_DSN}

  policy-enforcement-service:
    build:
      context: ../services/policy-enforcement-service
      dockerfile: ./Dockerfile
    ports:
      - "5100:5100"
    volumes:
      - policy-enforcement-data:/mnt/
    environment:
      JWT_SECRET: ${JWT_SECRET}
      POLICIES_CONFIG_PATH: ${POLICIES_CONFIG_PATH}

  product-service:
    build:
      context: ../services/product-service
      dockerfile: ./Dockerfile
    ports:
      - "5001:5001"
    environment:
      PG_DSN: ${POSTGRES_DSN}

  delivery-service:
    build:
      context: ../services/delivery-service
      dockerfile: ./Dockerfile
    ports:
      - "5002:5002"
    environment:
      PG_DSN: ${POSTGRES_DSN}

  user-service:
    build:
      context: ../services/user-service
      dockerfile: ./Dockerfile
    ports:
      - "5003:5003"
    environment:
      POSTGRES_DSN: ${POSTGRES_DB_ASYNC_DSN}
      JWT_SECRET: ${JWT_SECRET}
      RESET_PASSWORD_TOKEN_SECRET: ${RESET_PASSWORD_TOKEN_SECRET}
      VERIFICATION_TOKEN_SECRET: ${VERIFICATION_TOKEN_SECRET}


volumes:
  postgres_data:
  mongo-data:
  policy-enforcement-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./policy-enforcement-data