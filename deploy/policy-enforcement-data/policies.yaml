services:
    - name: favorite-service
      entrypoint: http://favorite-service:5001/
      inject_token_in_swagger: True
    - name: apartment-service
      entrypoint: http://apartment-service:5002/
      inject_token_in_swagger: True
    - name: user-service
      entrypoint: http://user-service:5003/
      inject_token_in_swagger: True
    - name: review-service
      entrypoint: http://review-service:5004/
      inject_token_in_swagger: True
model: |
    [request_definition]
    r = sub, obj, act
    
    [policy_definition]
    p = sub_rule, obj, act
    
    [policy_effect]
    e = some(where (p.eft == allow))
    
    [matchers]
    m = eval(p.sub_rule) && keyMatch(r.obj, p.obj) && regexMatch(r.act, p.act)
policies:
      #group_id
      #1 - Покупатель услуг
      #2 - Арендадатель
      #3 - Админ

      #Покупатель услуг
    - service: favorite-service
      rule: r.sub.group_id == 1
      resource: /favorites*
      methods: (GET)|(POST)|(PUT)|(DELETE)
    - service: apartment-service
      rule: r.sub.group_id == 1
      resource: /apartments*
      methods: GET
    - service: user-service
      rule: r.sub.group_id == 1
      resource: /users/*
      methods: GET
    - service: review-service
      rule: r.sub.group_id == 1
      resource: /reviews*
      methods: (GET)|(POST)|(PUT)|(DELETE)

      #Арендадатель
    - service: apartment-service
      rule: r.sub.group_id == 2
      resource: /apartments*
      methods: (GET)|(POST)|(PUT)|(DELETE)
    - service: user-service
      rule: r.sub.group_id == 2
      resource: /users/*
      methods: GET
    - service: review-service
      rule: r.sub.group_id == 2
      resource: /reviews*
      methods: GET

      #Админ
    - service: favorite-service
      rule: r.sub.group_id == 3
      resource: /favorites*
      methods: (GET)|(POST)|(PUT)|(DELETE)
    - service: apartment-service
      rule: r.sub.group_id == 3
      resource: /apartments*
      methods: (GET)|(POST)|(PUT)|(DELETE)
    - service: user-service
      rule: r.sub.group_id == 3
      resource: /users/*
      methods: (GET)|(POST)|(PUT)|(DELETE)
    - service: review-service
      rule: r.sub.group_id == 3
      resource: /reviews*
      methods: (GET)|(POST)|(PUT)|(DELETE)

      #общее
    - service: user-service
      resource: /auth/*
      methods: POST
      white_list: true
    - service: user-service
      white_list: true
      resource: /groups*
      methods: (GET)|(POST)|(PUT)|(DELETE)